{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\SUPCOM\\\\INDP3_AIM\\\\Indexation et recherche dans des bases massives MM\\\\image_search_project\\\\frontend\\\\src\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\n// ImageUploader.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [features, setFeatures] = useState([]);\n  const [featureSize, setFeatureSize] = useState(0);\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const onFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post('http://localhost:5001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Set features and their size\n      setFeatures(response.data.features);\n      setFeatureSize(response.data.features.length);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Image for Feature Extraction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), features.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted Features:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Size of features array: \", featureSize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(features, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploader, \"6Psd0GP2AfypuJYdLF9yC3Cix7Q=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","selectedFile","setSelectedFile","features","setFeatures","featureSize","setFeatureSize","onFileChange","event","target","files","onFileUpload","formData","FormData","append","response","post","headers","data","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/SUPCOM/INDP3_AIM/Indexation et recherche dans des bases massives MM/image_search_project/frontend/src/ImageUploader.js"],"sourcesContent":["// ImageUploader.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageUploader = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [features, setFeatures] = useState([]);\r\n    const [featureSize, setFeatureSize] = useState(0);\r\n\r\n    const onFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const onFileUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append('image', selectedFile);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5001/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            // Set features and their size\r\n            setFeatures(response.data.features);\r\n            setFeatureSize(response.data.features.length);\r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload Image for Feature Extraction</h2>\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <button onClick={onFileUpload}>Upload</button>\r\n\r\n            {features.length > 0 && (\r\n                <div>\r\n                    <h3>Extracted Features:</h3>\r\n                    <p>Size of features array: {featureSize}</p>\r\n                    <pre>{JSON.stringify(features, null, 2)}</pre> {/* Display features as a formatted string */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC5BN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEb,YAAY,CAAC;IAEtC,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACxEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;;MAEF;MACAb,WAAW,CAACW,QAAQ,CAACG,IAAI,CAACf,QAAQ,CAAC;MACnCG,cAAc,CAACS,QAAQ,CAACG,IAAI,CAACf,QAAQ,CAACgB,MAAM,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEtB;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9D5B,OAAA;MAAQgC,OAAO,EAAEnB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7CvB,QAAQ,CAACgB,MAAM,GAAG,CAAC,iBAChBrB,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAAwB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B5B,OAAA;QAAAwB,QAAA,GAAG,0BAAwB,EAACjB,WAAW;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C5B,OAAA;QAAAwB,QAAA,EAAMS,IAAI,CAACC,SAAS,CAAC7B,QAAQ,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA3CID,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
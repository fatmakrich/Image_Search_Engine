{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\SUPCOM\\\\INDP3_AIM\\\\Indexation et recherche dans des bases massives MM\\\\image_search_project\\\\frontend\\\\src\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [similarImages, setSimilarImages] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const folderNames = ['0', '1', '2']; // Noms des dossiers, à ajuster si nécessaire\n\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setSimilarImages([]); // Réinitialiser les images similaires à chaque nouvelle sélection\n    setErrorMessage('');\n  };\n  const onUpload = async () => {\n    if (!selectedFile) {\n      setErrorMessage('Please select an image to search');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    setIsLoading(true);\n    setIsSearching(false);\n    try {\n      // Upload de l'image sélectionnée\n      const response = await axios.post('http://localhost:5001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIsSearching(true); // Indiquer que la recherche commence\n\n      // Traitement des images similaires retournées\n      const fetchedImages = response.data.similarImages.map(img => ({\n        imageName: img.imageName,\n        distance: img.distance,\n        thumbnailUrl: getThumbnailUrl(img.imageName)\n      }));\n      setSimilarImages(fetchedImages);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setErrorMessage('An error occurred while uploading the image.');\n    } finally {\n      setIsLoading(false); // Fin du chargement\n    }\n  };\n  const getThumbnailUrl = imageName => {\n    // Itérer à travers chaque dossier pour trouver la miniature\n    for (const folderName of folderNames) {\n      const imageUrl = `http://localhost:5001/thumbnails/${folderName}/${imageName}`;\n      return imageUrl; // Retourner la première URL de miniature trouvée\n    }\n    return ''; // Retourner une chaîne vide si aucune miniature n'est trouvée\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Similar Images Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        className: \"file-upload\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: \"Upload file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Uploaded Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: URL.createObjectURL(selectedFile) // Afficher l'image téléchargée\n          ,\n          alt: \"Uploaded\",\n          className: \"thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onUpload,\n        disabled: isLoading,\n        children: isLoading ? 'Uploading...' : 'Search images'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 34\n      }, this), isSearching && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Searching for similar images...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"dicv\", {\n      children: similarImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Similar Images:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-grid\",\n          children: similarImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.thumbnailUrl,\n              alt: `Similar to ${selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name}`,\n              className: \"thumbnail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Distance: \", image.distance.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)]\n          }, image.imageName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploader, \"KX0h3NB3n8LMuGwnYUQXsp6qCqI=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","similarImages","setSimilarImages","selectedFile","setSelectedFile","isLoading","setIsLoading","isSearching","setIsSearching","errorMessage","setErrorMessage","folderNames","onFileChange","event","target","files","onUpload","formData","FormData","append","response","post","headers","fetchedImages","data","map","img","imageName","distance","thumbnailUrl","getThumbnailUrl","error","console","folderName","imageUrl","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","src","URL","createObjectURL","alt","onClick","disabled","length","image","name","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/SUPCOM/INDP3_AIM/Indexation et recherche dans des bases massives MM/image_search_project/frontend/src/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUploader.css';\r\n\r\nconst ImageUploader = () => {\r\n    const [similarImages, setSimilarImages] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const folderNames = ['0', '1', '2']; // Noms des dossiers, à ajuster si nécessaire\r\n\r\n    const onFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setSimilarImages([]); // Réinitialiser les images similaires à chaque nouvelle sélection\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const onUpload = async () => {\r\n        if (!selectedFile) {\r\n            setErrorMessage('Please select an image to search');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', selectedFile);\r\n\r\n        setIsLoading(true);\r\n        setIsSearching(false);\r\n\r\n        try {\r\n            // Upload de l'image sélectionnée\r\n            const response = await axios.post('http://localhost:5001/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            setIsSearching(true); // Indiquer que la recherche commence\r\n\r\n            // Traitement des images similaires retournées\r\n            const fetchedImages = response.data.similarImages.map((img) => ({\r\n                imageName: img.imageName,\r\n                distance: img.distance,\r\n                thumbnailUrl: getThumbnailUrl(img.imageName),\r\n            }));\r\n\r\n            setSimilarImages(fetchedImages);\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            setErrorMessage('An error occurred while uploading the image.');\r\n        } finally {\r\n            setIsLoading(false); // Fin du chargement\r\n        }\r\n    };\r\n\r\n    const getThumbnailUrl = (imageName) => {\r\n        // Itérer à travers chaque dossier pour trouver la miniature\r\n        for (const folderName of folderNames) {\r\n            const imageUrl = `http://localhost:5001/thumbnails/${folderName}/${imageName}`;\r\n            return imageUrl; // Retourner la première URL de miniature trouvée\r\n        }\r\n        return ''; // Retourner une chaîne vide si aucune miniature n'est trouvée\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <h1>Similar Images Search</h1>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"file-upload\"\r\n                    className=\"file-upload\"\r\n                    onChange={onFileChange}\r\n                />\r\n\r\n                <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n                    Upload file\r\n                </label>\r\n                {selectedFile && (\r\n                    <div className=\"uploaded-image\">\r\n                        <h2>Uploaded Image:</h2>\r\n                        <img\r\n                            src={URL.createObjectURL(selectedFile)} // Afficher l'image téléchargée\r\n                            alt=\"Uploaded\"\r\n                            className=\"thumbnail\"\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <button onClick={onUpload} disabled={isLoading}>\r\n                    {isLoading ? 'Uploading...' : 'Search images'}\r\n                </button>\r\n\r\n\r\n                {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n\r\n                {isSearching && <p className=\"loading\">Searching for similar images...</p>} {/* Indicateur de recherche */}\r\n            </div>\r\n            <dicv>\r\n                {similarImages.length > 0 && (\r\n                    <div className=\"results\">\r\n                        <h2>Similar Images:</h2>\r\n                        <div className=\"image-grid\">\r\n                            {similarImages.map((image) => (\r\n                                <div key={image.imageName} className=\"image-item\">\r\n                                    <img\r\n                                        src={image.thumbnailUrl}\r\n                                        alt={`Similar to ${selectedFile?.name}`}\r\n                                        className=\"thumbnail\"\r\n                                    />\r\n                                    <p>Distance: {image.distance.toFixed(2)}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </dicv>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
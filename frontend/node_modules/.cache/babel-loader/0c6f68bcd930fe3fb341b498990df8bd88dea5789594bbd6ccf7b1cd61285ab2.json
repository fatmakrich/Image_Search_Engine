{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\SUPCOM\\\\INDP3_AIM\\\\Indexation et recherche dans des bases massives MM\\\\image_search_project\\\\frontend\\\\src\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ImageUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [similarImages, setSimilarImages] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePath, setImagePath] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [folderNames, setFolderNames] = useState([]); // State for storing folder names\n\n  useEffect(() => {\n    const fetchFolderNames = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/folders'); // Fetch folder names\n        setFolderNames(response.data); // Store folder names\n      } catch (error) {\n        console.error('Error fetching folder names:', error);\n        setErrorMessage('Failed to fetch folder names.');\n      }\n    };\n    fetchFolderNames();\n  }, []); // Fetch folder names on component mount\n\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setErrorMessage('');\n  };\n  const onPathChange = event => {\n    setImagePath(event.target.value);\n    setErrorMessage('');\n  };\n  const onUpload = async () => {\n    if (!selectedFile && !imagePath) {\n      setErrorMessage('Please select an image or enter a path to search');\n      return;\n    }\n    const formData = new FormData();\n    if (selectedFile) {\n      formData.append('image', selectedFile);\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5001/upload', {\n        imagePath: imagePath || undefined,\n        formData: selectedFile ? formData : undefined\n      });\n      const fetchedImages = response.data.similarImages.map(img => ({\n        imageName: img.imageName,\n        distance: img.distance,\n        thumbnailUrl: getThumbnailUrl(img.imageName) // Use dynamic logic to get URL\n      }));\n      setSimilarImages(fetchedImages);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      setErrorMessage('An error occurred while uploading the image.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const getThumbnailUrl = imageName => {\n    for (const folderName of folderNames) {\n      const imageUrl = `http://localhost:5001/thumbnails/${folderName}/${imageName}`;\n      // You would need an API or a file check to see if the image exists\n      // For demonstration, we will just assume we found it\n      return imageUrl; // Return the URL if you find the image\n    }\n    return ''; // Return empty if no folder has the image\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Similar Images Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      className: \"file-upload\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      className: \"custom-file-upload\",\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter image path\",\n      value: imagePath,\n      onChange: onPathChange,\n      className: \"image-path-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpload,\n      disabled: isLoading,\n      children: isLoading ? 'Uploading...' : 'Search images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 30\n    }, this), similarImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Similar Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: similarImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.thumbnailUrl,\n            alt: `Similar to ${selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name}`,\n            className: \"thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", image.distance.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, image.imageName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploader, \"qs4CDzkDsp8Bh6ylDWejCOj1dHY=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageUploader","_s","similarImages","setSimilarImages","selectedFile","setSelectedFile","imagePath","setImagePath","isLoading","setIsLoading","errorMessage","setErrorMessage","folderNames","setFolderNames","fetchFolderNames","response","get","data","error","console","onFileChange","event","target","files","onPathChange","value","onUpload","formData","FormData","append","post","undefined","fetchedImages","map","img","imageName","distance","thumbnailUrl","getThumbnailUrl","folderName","imageUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","placeholder","onClick","disabled","length","image","src","alt","name","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/SUPCOM/INDP3_AIM/Indexation et recherche dans des bases massives MM/image_search_project/frontend/src/ImageUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUploader.css';\r\n\r\nconst ImageUploader = () => {\r\n    const [similarImages, setSimilarImages] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [imagePath, setImagePath] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [folderNames, setFolderNames] = useState([]); // State for storing folder names\r\n\r\n    useEffect(() => {\r\n        const fetchFolderNames = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5001/api/folders'); // Fetch folder names\r\n                setFolderNames(response.data); // Store folder names\r\n            } catch (error) {\r\n                console.error('Error fetching folder names:', error);\r\n                setErrorMessage('Failed to fetch folder names.');\r\n            }\r\n        };\r\n\r\n        fetchFolderNames();\r\n    }, []); // Fetch folder names on component mount\r\n\r\n    const onFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const onPathChange = (event) => {\r\n        setImagePath(event.target.value);\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const onUpload = async () => {\r\n        if (!selectedFile && !imagePath) {\r\n            setErrorMessage('Please select an image or enter a path to search');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        if (selectedFile) {\r\n            formData.append('image', selectedFile);\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5001/upload', {\r\n                imagePath: imagePath || undefined,\r\n                formData: selectedFile ? formData : undefined,\r\n            });\r\n            const fetchedImages = response.data.similarImages.map((img) => ({\r\n                imageName: img.imageName,\r\n                distance: img.distance,\r\n                thumbnailUrl: getThumbnailUrl(img.imageName), // Use dynamic logic to get URL\r\n            }));\r\n            setSimilarImages(fetchedImages);\r\n        } catch (error) {\r\n            console.error('Error uploading image:', error);\r\n            setErrorMessage('An error occurred while uploading the image.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const getThumbnailUrl = (imageName) => {\r\n        for (const folderName of folderNames) {\r\n            const imageUrl = `http://localhost:5001/thumbnails/${folderName}/${imageName}`;\r\n            // You would need an API or a file check to see if the image exists\r\n            // For demonstration, we will just assume we found it\r\n            return imageUrl; // Return the URL if you find the image\r\n        }\r\n        return ''; // Return empty if no folder has the image\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Similar Images Search</h1>\r\n            <input\r\n                type=\"file\"\r\n                id=\"file-upload\"\r\n                className=\"file-upload\"\r\n                onChange={onFileChange}\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n                Upload file\r\n            </label>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter image path\"\r\n                value={imagePath}\r\n                onChange={onPathChange}\r\n                className=\"image-path-input\"\r\n            />\r\n\r\n            <button onClick={onUpload} disabled={isLoading}>\r\n                {isLoading ? 'Uploading...' : 'Search images'}\r\n            </button>\r\n\r\n            {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n\r\n            {similarImages.length > 0 && (\r\n                <div className=\"results\">\r\n                    <h2>Similar Images:</h2>\r\n                    <div className=\"image-grid\">\r\n                        {similarImages.map((image) => (\r\n                            <div key={image.imageName} className=\"image-item\">\r\n                                <img\r\n                                    src={image.thumbnailUrl}\r\n                                    alt={`Similar to ${selectedFile?.name}`}\r\n                                    className=\"thumbnail\"\r\n                                />\r\n                                <p>Distance: {image.distance.toFixed(2)}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}